<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <!-- Our unsignedInt doesn"t allow a leading "+" in its lexical form -->
  <xs:simpleType name="unsignedInt">
    <xs:restriction base="xs:unsignedInt">
      <xs:pattern value="[0-9]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="positiveInteger">
    <xs:restriction base="xs:positiveInteger">
      <xs:pattern value="[0-9]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="uint8range">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="0x[0-9a-fA-F]{1,2}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:int">
          <xs:minInclusive value="0"/>
          <xs:maxInclusive value="255"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="uint24range">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="0x[0-9a-fA-F]{1,6}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:int">
          <xs:minInclusive value="0"/>
          <xs:maxInclusive value="16777215"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="UUID">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="[a-fA-F0-9]{32}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="[a-fA-F0-9]{8}\-([a-fA-F0-9]{4}\-){3}[a-fA-F0-9]{12}"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <!-- a 6 byte MAC address in ASCII-hex format, eg "12:34:56:78:9A:BC" -->
  <xs:simpleType name="macAddr">
    <xs:restriction base="xs:string">
      <xs:pattern value="([a-fA-F0-9]{2}:){5}[a-fA-F0-9]{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- An ipv4 "dotted quad" address -->
  <xs:simpleType name="ipv4Addr">
    <xs:restriction base="xs:string">
      <xs:pattern value="(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([1-9][0-9])|([0-9]))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([1-9][0-9])|([0-9]))"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- Based on http://blog.mes-stats.fr/2008/10/09/regex-ipv4-et-ipv6 -->
  <xs:simpleType name="ipv6Addr">
    <xs:restriction base="xs:string">
      <xs:pattern value="(([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([1-9][0-9])|([0-9]))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([1-9][0-9])|([0-9])))|(([0-9A-Fa-f]{1,4}:){0,5}:(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([1-9][0-9])|([0-9]))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([1-9][0-9])|([0-9])))|(::([0-9A-Fa-f]{1,4}:){0,5}(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([1-9][0-9])|([0-9]))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([1-9][0-9])|([0-9])))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:)"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ipAddr">
    <xs:union memberTypes="ipv4Addr ipv6Addr"/>
  </xs:simpleType>
  <xs:simpleType name="ipv4Prefix">
    <xs:restriction base="xs:unsignedInt">
      <xs:maxInclusive value="32"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ipv6Prefix">
    <xs:restriction base="xs:unsignedInt">
      <xs:maxInclusive value="128"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ipPrefix">
    <xs:union memberTypes="ipv4Prefix ipv6Prefix"/>
  </xs:simpleType>
  <xs:simpleType name="genericName">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z0-9_\+\-]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dnsName">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z0-9\.\-]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="deviceName">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z0-9_\.\-\\:/]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="filePath">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z0-9_\.\+\-\\&amp;&quot;&apos;&lt;&gt;/%]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="absFilePath">
    <xs:restriction base="xs:string">
      <xs:pattern value="/[a-zA-Z0-9_\.\+\-\\&amp;&quot;&apos;&lt;&gt;/%]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="absDirPath">
    <xs:restriction base="xs:string">
      <xs:pattern value="/[a-zA-Z0-9_\.\+\-\\&amp;&quot;&apos;&lt;&gt;/%]*"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- description element, may be placed anywhere under the root -->
  <xs:element name="description" type="xs:string"/>
  <!-- We handle only document defining a domain -->
  <xs:element name="domain">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="ids">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="description"/>
            <xs:element ref="cpu"/>
            <xs:group ref="oshvm"/>
            <xs:group ref="clock"/>
            <xs:group ref="resources"/>
            <xs:group ref="features"/>
            <xs:group ref="termination"/>
            <xs:element ref="devices"/>
          </xs:choice>
          <xs:attribute name="type" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="kvm"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:group name="oshvm">
    <xs:sequence>
      <xs:element name="os">
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="ostypehvm"/>
            <xs:group ref="osbootdev"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:group name="ostypehvm">
    <xs:sequence>
      <xs:element name="type">
        <xs:complexType>
          <xs:simpleContent>
            <xs:restriction base="xs:anyType">
              <xs:simpleType>
                <xs:restriction base="xs:token">
                  <xs:enumeration value="hvm"/>
                </xs:restriction>
              </xs:simpleType>
              <xs:attribute name="arch">
                <xs:simpleType>
                  <xs:restriction base="xs:token">
                    <xs:enumeration value="i686"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
              <xs:attribute name="machine">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:enumeration value="pc"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
            </xs:restriction>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <!--
    The Identifiers can be:
    - an optional id attribute with a number on the domain element
    - a mandatory name
    - an optional uuid
  -->
  <xs:complexType name="ids">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="name"/>
      <xs:element ref="uuid"/>
    </xs:choice>
    <xs:attribute name="id" type="unsignedInt"/>
  </xs:complexType>
  <xs:element name="name" type="domainName"/>
  <xs:element name="uuid" type="UUID"/>
  <!--
    Resources usage defines the amount of memory (maximum and possibly
    current usage) and number of virtual CPUs used by that domain.
    We can't check here the rule that currentMemory <= memory
  -->
  <xs:group name="resources">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="memory"/>
        <xs:element ref="currentMemory"/>
        <xs:element ref="vcpu"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:element name="memory" type="memoryKB"/>
  <xs:element name="currentMemory" type="memoryKB"/>
  <xs:element name="vcpu">
    <xs:simpleType>
      <xs:restriction base="xs:unsignedShort">
        <xs:pattern value="[0-9]+"/>
        <xs:minInclusive value="1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:group name="clock">
    <xs:sequence>
      <xs:element minOccurs="0" ref="clock"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="clock">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="timer"/>
      </xs:sequence>
      <xs:attribute name="offset" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="localtime"/>
            <xs:enumeration value="utc"/>
            <xs:enumeration value="timezone"/>
            <xs:enumeration value="variable"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="timezone" type="timeZone"/>
      <xs:attribute name="adjustment" type="timeDelta"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="timer">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="catchup"/>
      </xs:sequence>
      <xs:attribute name="name" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="platform"/>
            <xs:enumeration value="pit"/>
            <xs:enumeration value="rtc"/>
            <xs:enumeration value="hpet"/>
            <xs:enumeration value="tsc"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="track">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="boot"/>
            <xs:enumeration value="guest"/>
            <xs:enumeration value="wall"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="tickpolicy">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="delay"/>
            <xs:enumeration value="catchup"/>
            <xs:enumeration value="merge"/>
            <xs:enumeration value="discard"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="frequency" type="unsignedInt"/>
      <xs:attribute name="mode">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="auto"/>
            <xs:enumeration value="native"/>
            <xs:enumeration value="emulate"/>
            <xs:enumeration value="paravirt"/>
            <xs:enumeration value="smpsafe"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="present">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes"/>
            <xs:enumeration value="no"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="catchup">
    <xs:complexType>
      <xs:attribute name="threshold" type="unsignedInt"/>
      <xs:attribute name="slew" type="unsignedInt"/>
      <xs:attribute name="limit" type="unsignedInt"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="osbootdev">
    <xs:sequence>
      <xs:element name="boot">
        <xs:complexType>
          <xs:attribute name="dev" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="hd"/>
                <xs:enumeration value="fd"/>
                <xs:enumeration value="cdrom"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:group name="diskspec">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="driver"/>
        <xs:group ref="target"/>
        <xs:group ref="deviceBoot"/>
        <xs:element ref="readonly"/>
        <xs:element name="serial" type="diskSerial"/>
        <xs:group ref="address"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:element name="readonly">
    <xs:complexType/>
  </xs:element>
  <xs:element name="lease">
    <xs:complexType>
      <xs:all>
        <xs:element ref="lockspace"/>
        <xs:element ref="key"/>
        <xs:element name="target">
          <xs:complexType>
            <xs:attribute name="path" use="required"/>
            <xs:attribute name="offset" type="unsignedInt"/>
          </xs:complexType>
        </xs:element>
      </xs:all>
    </xs:complexType>
  </xs:element>
  <xs:element name="lockspace" type="xs:string"/>
  <xs:element name="key" type="xs:string"/>
  <xs:attributeGroup name="startupPolicy">
    <xs:attribute name="startupPolicy" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="mandatory"/>
          <xs:enumeration value="requisite"/>
          <xs:enumeration value="optional"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:element name="disk">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="source">
          <xs:complexType>
            <xs:attribute name="file" type="absFilePath"/>
          </xs:complexType>
        </xs:element>
        <xs:group ref="diskspec"/>
      </xs:choice>
      <xs:attribute name="device">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="disk"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="type">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="file"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="diskTarget">
    <xs:restriction base="xs:string">
      <xs:pattern value="(ioemu:)?(fd|hd|sd|vd|xvd|ubd)[a-zA-Z0-9_]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:group name="target">
    <xs:sequence>
      <xs:element name="target">
        <xs:complexType>
          <xs:attribute name="dev" use="required" type="diskTarget"/>
          <xs:attribute name="bus">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="ide"/>
                <xs:enumeration value="fdc"/>
                <xs:enumeration value="scsi"/>
                <xs:enumeration value="usb"/>
                <xs:enumeration value="sata"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:group name="driver">
    <xs:sequence>
      <xs:element name="driver">
        <xs:complexType>
          <xs:attribute name="name">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="qemu"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="type" type="genericName"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:element name="controller">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="master"/>
        <xs:group minOccurs="0" ref="address"/>
      </xs:sequence>
      <xs:attribute name="type">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="fdc"/>
            <xs:enumeration value="ide"/>
            <xs:enumeration value="scsi"/>
            <xs:enumeration value="sata"/>
            <xs:enumeration value="usb"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="ports" type="unsignedInt"/>
      <xs:attribute name="vectors" type="unsignedInt"/>
      <xs:attribute name="index" use="required" type="unsignedInt"/>
      <xs:attribute name="model">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="auto"/>
            <xs:enumeration value="buslogic"/>
            <xs:enumeration value="lsilogic"/>
            <xs:enumeration value="lsisas1068"/>
            <xs:enumeration value="vmpvscsi"/>
            <xs:enumeration value="piix3-uhci"/>
            <xs:enumeration value="piix4-uhci"/>
            <xs:enumeration value="ehci"/>
            <xs:enumeration value="ich9-ehci1"/>
            <xs:enumeration value="ich9-uhci1"/>
            <xs:enumeration value="ich9-uhci2"/>
            <xs:enumeration value="ich9-uhci3"/>
            <xs:enumeration value="vt82c686b-uhci"/>
            <xs:enumeration value="pci-ohci"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="interface">
    <xs:complexType>
      <xs:group ref="interface-options"/>
      <xs:attribute name="type" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="user"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:group name="interface-options">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="mac"/>
        <xs:element name="model">
          <xs:complexType>
            <xs:attribute name="type" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:group ref="address"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:element name="mac">
    <xs:complexType>
      <xs:attribute name="address" use="required" type="macAddr"/>
    </xs:complexType>
  </xs:element>
  <!-- An emulator description is just a path to the binary used for the task -->
  <xs:element name="emulator" type="absFilePath"/>
  <!--
    A graphic description, currently in Xen only 2 types are supported:
      - sdl with optional display, xauth and fullscreen
      - vnc with a required port and optional listen IP address, password
        and keymap
  -->
  <xs:element name="graphics">
    <xs:complexType>
      <xs:attribute name="type" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="vnc"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="autoport" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    A video adapter description, allowing configuration of device
    model, number of virtual heads, and video ram size
  -->
  <xs:element name="video">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="model">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" ref="acceleration"/>
            </xs:sequence>
            <xs:attribute name="type" use="required">
              <xs:simpleType>
                <xs:restriction base="xs:token">
                  <xs:enumeration value="vga"/>
                  <xs:enumeration value="cirrus"/>
                  <xs:enumeration value="vmvga"/>
                  <xs:enumeration value="xen"/>
                  <xs:enumeration value="vbox"/>
                  <xs:enumeration value="qxl"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="vram" type="unsignedInt"/>
            <xs:attribute name="heads" type="unsignedInt"/>
          </xs:complexType>
        </xs:element>
        <xs:group minOccurs="0" ref="address"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="acceleration">
    <xs:complexType>
      <xs:attribute name="accel3d">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes"/>
            <xs:enumeration value="no"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="accel2d">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes"/>
            <xs:enumeration value="no"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    When a domain terminates multiple policies can be applied depending
    on how it ended:
  -->
  <xs:group name="termination">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="on_reboot"/>
        <xs:element ref="on_poweroff"/>
        <xs:element ref="on_crash"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:element name="on_reboot" type="offOptions"/>
  <xs:element name="on_poweroff" type="offOptions"/>
  <xs:element name="on_crash" type="crashOptions"/>
  <!--
    Options when a domain terminates:
    destroy: The domain is cleaned up
    restart: A new domain is started in place of the old one
    preserve: The domain will remain in memory until it is destroyed manually
    rename-restart: a variant of the previous one but where the old domain is
                    renamed before being saved to allow a restart
  -->
  <xs:simpleType name="offOptions">
    <xs:restriction base="xs:token">
      <xs:enumeration value="destroy"/>
      <xs:enumeration value="restart"/>
      <xs:enumeration value="preserve"/>
      <xs:enumeration value="rename-restart"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
    Options when a domain crashes:
    destroy: The domain is cleaned up
    restart: A new domain is started in place of the old one
    preserve: The domain will remain in memory until it is destroyed manually
    rename-restart: a variant of the previous one but where the old domain is
                    renamed before being saved to allow a restart
    coredump-destroy: The crashed domain's core will be dumped, and then the
                      domain will be terminated completely and all resources
                      released
    coredump-restart: The crashed domain's core will be dumped, and then the
                      domain will be restarted with the same configuration
  -->
  <xs:simpleType name="crashOptions">
    <xs:restriction base="xs:token">
      <xs:enumeration value="destroy"/>
      <xs:enumeration value="restart"/>
      <xs:enumeration value="preserve"/>
      <xs:enumeration value="rename-restart"/>
      <xs:enumeration value="coredump-destroy"/>
      <xs:enumeration value="coredump-restart"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
    Specific setup for a qemu emulated character device.  Note: this
    definition doesn't fully specify the constraints on this node.
  -->
  <xs:group name="qemucdev">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:sequence>
          <xs:element name="target">
            <xs:complexType>
              <xs:attribute name="port"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:group ref="address"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="qemucdev">
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="null"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="tty" type="absFilePath"/>
  </xs:attributeGroup>
  <xs:element name="sound">
    <xs:complexType>
      <xs:group minOccurs="0" ref="address"/>
      <xs:attribute name="model" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="sb16"/>
            <xs:enumeration value="es1370"/>
            <xs:enumeration value="pcspk"/>
            <xs:enumeration value="ac97"/>
            <xs:enumeration value="ich6"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="memballoon">
    <xs:complexType>
      <xs:group minOccurs="0" ref="address"/>
      <xs:attribute name="model" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="virtio"/>
            <xs:enumeration value="xen"/>
            <xs:enumeration value="none"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="parallel">
    <xs:complexType>
      <xs:group ref="qemucdev"/>
      <xs:attributeGroup ref="qemucdev"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="serial">
    <xs:sequence>
      <xs:element name="serial">
        <xs:complexType>
          <xs:group ref="qemucdev"/>
          <xs:attributeGroup ref="qemucdev"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:element name="input">
    <xs:complexType>
      <xs:group minOccurs="0" ref="address"/>
      <xs:attribute name="type" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="tablet"/>
            <xs:enumeration value="mouse"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="bus">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="ps2"/>
            <xs:enumeration value="usb"/>
            <xs:enumeration value="xen"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="hub">
    <xs:complexType>
      <xs:group minOccurs="0" ref="address"/>
      <xs:attribute name="type" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="usb"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    Devices attached to a domain.
    Sub-elements such as <alias> are not documented here, as they
    can only exist when generated for a live domain and are ignored
    when defining a domain.
  -->
  <xs:element name="devices">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="emulator"/>
        <xs:choice>
          <xs:element ref="disk"/>
          <xs:element ref="controller"/>
          <xs:element ref="lease"/>
          <xs:element ref="interface"/>
          <xs:element ref="input"/>
          <xs:element ref="sound"/>
          <xs:element ref="graphics"/>
          <xs:element ref="video"/>
          <xs:element ref="parallel"/>
          <xs:group ref="serial"/>
          <xs:element ref="hub"/>
        </xs:choice>
        <xs:element ref="memballoon"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <!-- A set of optional features: PAE, APIC, ACPI, and HAP support -->
  <xs:group name="features">
    <xs:sequence>
      <xs:element minOccurs="0" ref="features"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="features">
    <xs:complexType>
      <xs:all>
        <xs:element minOccurs="0" ref="pae"/>
        <xs:element minOccurs="0" ref="apic"/>
        <xs:element minOccurs="0" ref="acpi"/>
        <xs:element minOccurs="0" ref="hap"/>
      </xs:all>
    </xs:complexType>
  </xs:element>
  <xs:element name="pae">
    <xs:complexType/>
  </xs:element>
  <xs:element name="apic">
    <xs:complexType/>
  </xs:element>
  <xs:element name="acpi">
    <xs:complexType/>
  </xs:element>
  <xs:element name="hap">
    <xs:complexType/>
  </xs:element>
  <!-- CPU specification -->
  <xs:element name="cpu">
    <xs:complexType>
      <xs:choice>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="topology"/>
          <xs:element ref="numa"/>
        </xs:choice>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:group ref="cpuModel"/>
          <xs:group ref="cpuVendor"/>
          <xs:element ref="topology"/>
          <xs:element ref="feature"/>
          <xs:element ref="numa"/>
        </xs:choice>
      </xs:choice>
      <xs:attribute name="match">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="minimum"/>
            <xs:enumeration value="exact"/>
            <xs:enumeration value="strict"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="cpuMatch">
    <xs:attribute name="match" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="minimum"/>
          <xs:enumeration value="exact"/>
          <xs:enumeration value="strict"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:group name="cpuModel">
    <xs:sequence>
      <xs:element name="model" type="xs:string"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="cpuVendor">
    <xs:sequence>
      <xs:element name="vendor" type="xs:string"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="feature">
    <xs:complexType>
      <xs:attribute name="policy" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="force"/>
            <xs:enumeration value="require"/>
            <xs:enumeration value="optional"/>
            <xs:enumeration value="disable"/>
            <xs:enumeration value="forbid"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="name" use="required" type="featureName"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="topology">
    <xs:complexType>
      <xs:attribute name="sockets" use="required" type="positiveInteger"/>
      <xs:attribute name="cores" use="required" type="positiveInteger"/>
      <xs:attribute name="threads" use="required" type="positiveInteger"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="numa">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="cell"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="cell">
    <xs:complexType>
      <xs:attribute name="cpus" use="required" type="cpuset"/>
      <xs:attribute name="memory" use="required" type="memoryKB"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="address">
    <xs:sequence>
      <xs:element name="address">
        <xs:complexType>
          <xs:attribute name="port">
            <xs:simpleType>
              <xs:union memberTypes="driveUnit usbPort"/>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="bus">
            <xs:simpleType>
              <xs:union memberTypes="pciBus driveBus driveBus usbAddr"/>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="type" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="pci"/>
                <xs:enumeration value="drive"/>
                <xs:enumeration value="virtio-serial"/>
                <xs:enumeration value="ccid"/>
                <xs:enumeration value="usb"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="slot">
            <xs:simpleType>
              <xs:union memberTypes="pciSlot driveUnit"/>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="domain" type="pciDomain"/>
          <xs:attribute name="function" type="pciFunc"/>
          <xs:attribute name="multifunction">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="on"/>
                <xs:enumeration value="off"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="controller" type="driveController"/>
          <xs:attribute name="unit" type="driveUnit"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:element name="master">
    <xs:complexType>
      <xs:attribute name="startport" use="required" type="usbPort"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="deviceBoot">
    <xs:sequence>
      <xs:element name="boot">
        <xs:complexType>
          <xs:attribute name="order" use="required" type="positiveInteger"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <!--
    Type library
    
    A domain name should be made of ascii, numbers, _-+ and is non-empty
    memoryKB request at least 4Mbytes though Xen will grow bigger if too low
  -->
  <xs:simpleType name="cpuset">
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-9]+(-[0-9]+)?|\^[0-9]+)(,([0-9]+(-[0-9]+)?|\^[0-9]+))*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PortNumber">
    <xs:restriction base="xs:short">
      <xs:minInclusive value="-1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="memoryKB">
    <xs:restriction base="xs:unsignedInt">
      <xs:pattern value="[0-9]+"/>
      <xs:minInclusive value="4000"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="domainName">
    <xs:restriction base="xs:string">
      <xs:pattern value="[A-Za-z0-9_\.\+\-&amp;:/]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="diskSerial">
    <xs:restriction base="xs:string">
      <xs:pattern value="[A-Za-z0-9_\.\+\-]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="addrIPorName">
    <xs:restriction base="xs:string">
      <xs:pattern value="(([0-2]?[0-9]?[0-9]\.){3}[0-2]?[0-9]?[0-9])|(([0-9a-fA-F]+|:)+[0-9a-fA-F]+)|([a-zA-Z0-9_\.\+\-]*)"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="usbAddr">
    <xs:restriction base="xs:string">
      <xs:pattern value="(0x)?[0-9a-fA-F]{1,3}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="usbPort">
    <xs:restriction base="xs:string">
      <xs:pattern value="((0x)?[0-9a-fA-F]{1,3}\.){0,3}(0x)?[0-9a-fA-F]{1,3}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="pciDomain">
    <xs:restriction base="xs:string">
      <xs:pattern value="(0x)?[0-9a-fA-F]{1,4}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="pciBus">
    <xs:restriction base="xs:string">
      <xs:pattern value="(0x)?[0-9a-fA-F]{1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="pciSlot">
    <xs:restriction base="xs:string">
      <xs:pattern value="(0x)?[0-1]?[0-9a-fA-F]"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="pciFunc">
    <xs:restriction base="xs:string">
      <xs:pattern value="(0x)?[0-7]"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="driveController">
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="driveBus">
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="driveUnit">
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="featureName">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z0-9\-_]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="timeDelta">
    <xs:restriction base="xs:string">
      <xs:pattern value="(-|\+)?[0-9]+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="timeZone">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z0-9_\.\+\-/]+"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
